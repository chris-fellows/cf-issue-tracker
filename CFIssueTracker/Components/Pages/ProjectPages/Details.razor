@page "/projects/details"
@using Microsoft.EntityFrameworkCore
@using CFIssueTrackerCommon.Data
@using CFIssueTrackerCommon.Models
@inject IDbContextFactory<CFIssueTrackerContext> DbFactory
@inject NavigationManager NavigationManager

@attribute [Authorize(Roles = "Administrator,User")]

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>Project</h2>
    <hr />
    @if (project is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@project.Name</dd>
        </dl>
        <div>
            <a href="@($"/projects/edit?id={project.Id}")">Edit</a> |
            <a href="@($"/projects")">Back to List</a>
        </div>
    }
</div>

@code {
    private Project? project;

    [SupplyParameterFromQuery]
    private string Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        project = await context.Project.FirstOrDefaultAsync(m => m.Id == Id);

        if (project is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
