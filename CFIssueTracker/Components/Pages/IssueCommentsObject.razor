@using CFIssueTrackerCommon.Interfaces
@using CFIssueTrackerCommon.Models

@inject IIssueCommentService IssueCommentService

@rendermode InteractiveServer

<button @onclick="AddCommentAsync">Add Comment</button>

<EditForm method="post" Model="IssueCommentList" OnValidSubmit="UpdateIssueComments" FormName="editissuecomments" Enhance>
    @foreach (IssueComment issueComment in IssueCommentList.List)
    {
        <IssueCommentObject IssueComment="@issueComment" />
    }

    <button type="submit" class="btn btn-primary">Save</button>
</EditForm>

@code {
    [Parameter] public string IssueId { get; set; } = String.Empty;

    [Parameter] public IssueCommentList IssueCommentList { get; set; } = new();

    private async Task AddCommentAsync()
    {
        var id = IssueCommentList.Id;

        IssueCommentList.List.Add(new IssueComment()
            {
                Id = Guid.NewGuid().ToString(),
                CreatedDateTime = DateTimeOffset.UtcNow,
                Description = "New comment",
                IssueId = IssueId
            });        
    }

    private async Task UpdateIssueComments(EditContext editContext)
    {                
        int xxx = 1000;
    }
}
